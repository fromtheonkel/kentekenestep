name: Daily E-Step News Blog Generation

on:
  # Run daily at 10 AM UTC (11 AM CET)
  schedule:
    - cron: '0 10 * * *'
  
  # Allow manual triggering from GitHub UI
  workflow_dispatch:
    inputs:
      max_articles:
        description: 'Maximum articles to generate'
        default: '2'
        required: false
      min_priority:
        description: 'Minimum priority (1-5)'
        default: '4'
        required: false

jobs:
  generate-blog:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: |
        npm ci
        npm install @google/generative-ai puppeteer sharp slugify
        
    - name: 🔍 Monitor news feeds
      id: monitor
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        echo "🔍 Checking for relevant e-step news..."
        node scripts/news-monitor.js 2>&1 | tee news-report.txt
        
        # Check if there are high-priority articles
        if grep -q "P[4-5]" news-report.txt; then
          echo "found_news=true" >> $GITHUB_OUTPUT
          echo "✅ Found high-priority news!"
        else
          echo "found_news=false" >> $GITHUB_OUTPUT
          echo "📭 No high-priority news found today"
        fi
        
    - name: 📝 Generate analysis articles
      if: steps.monitor.outputs.found_news == 'true'
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        MAX_ARTICLES: ${{ github.event.inputs.max_articles || '2' }}
        MIN_PRIORITY: ${{ github.event.inputs.min_priority || '4' }}
      run: |
        echo "🚀 Generating analysis articles..."
        node scripts/news-to-blog-pipeline.js $MAX_ARTICLES $MIN_PRIORITY
        
    - name: 🖼️ Optimize generated images
      if: steps.monitor.outputs.found_news == 'true'
      run: |
        echo "🖼️ Optimizing images..."
        find public/images -name "*.webp" -newer news-report.txt -exec ls -la {} \;
        
    - name: 📊 Generate summary report
      if: always()
      run: |
        echo "📊 Generation Summary:" > generation-summary.md
        echo "- Date: $(date)" >> generation-summary.md
        echo "- Triggered by: ${{ github.event_name }}" >> generation-summary.md
        
        if [ "${{ steps.monitor.outputs.found_news }}" == "true" ]; then
          echo "- Status: ✅ Articles generated" >> generation-summary.md
          echo "- New articles count: $(git status --porcelain | grep -c 'src/data/blog/articles.ts' || echo '0')" >> generation-summary.md
          echo "- New images count: $(git status --porcelain | grep -c 'public/images/' || echo '0')" >> generation-summary.md
        else
          echo "- Status: 📭 No relevant news found" >> generation-summary.md
        fi
        
        cat generation-summary.md
        
    - name: 💾 Commit and push changes
      if: steps.monitor.outputs.found_news == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Actions Bot"
        
        # Check if there are changes to commit
        if [[ -n $(git status --porcelain) ]]; then
          git add .
          git commit -m "🤖 Auto-generated blog articles $(date '+%Y-%m-%d %H:%M')"
          git push origin main
          echo "✅ Changes committed and pushed"
        else
          echo "📭 No changes to commit"
        fi
        
    - name: 📋 Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: blog-generation-report
        path: |
          news-report.txt
          generation-summary.md
        retention-days: 7
        
    - name: 🚨 Notify on failure
      if: failure()
      run: |
        echo "❌ Blog generation workflow failed!"
        echo "Check the logs for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"